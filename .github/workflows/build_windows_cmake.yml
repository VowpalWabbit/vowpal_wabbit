name: Windows / C++ - CMake only

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  check:
    strategy:
      fail-fast: false
      matrix:
        build_config: ["Debug", "Release"]
        os: ["windows-2019", "windows-2022"]
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/vw/build
      SOURCE_DIR: ${{ github.workspace }}/vw
      VCPKG_ROOT_VW: ${{ github.workspace }}/vw/ext_libs/vcpkg
      VCPKG_REF: 501db0f17ef6df184fcdbfbe0f87cde2313b6ab1

    steps:
      - uses: actions/checkout@v3
        with:
          path: 'vw'
          submodules: recursive
      - name: Restore vcpkg and build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.VCPKG_ROOT_VW }}/installed/
            ${{ env.VCPKG_ROOT_VW }}
            !${{ env.VCPKG_ROOT_VW }}/buildtrees
            !${{ env.VCPKG_ROOT_VW }}/packages
            !${{ env.VCPKG_ROOT_VW }}/downloads
          key: |
            ${{ env.VCPKG_REF }}-${{ matrix.os }}-vcpkg-cache-invalidate-0
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Bootstrap vcpkg
        run: ${{ env.VCPKG_ROOT_VW }}/bootstrap-vcpkg.bat
      - name: Install vcpkg dependencies
        run: ${{ env.VCPKG_ROOT_VW }}/vcpkg.exe --triplet x64-windows install zlib flatbuffers
      - name: Generate project files
        run: |
          cmake -S "${{ env.SOURCE_DIR }}" -B "${{ env.CMAKE_BUILD_DIR }}" -A "x64" -DVCPKG_MANIFEST_MODE=OFF -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT_VW }}/scripts/buildsystems/vcpkg.cmake" -DVW_FEAT_FLATBUFFERS=On -DVW_FEAT_CSV=On -DVW_FEAT_CB_GRAPH_FEEDBACK=On -Dvw_BUILD_NET_FRAMEWORK=On
      - name: Build project
        run: |
          cmake --build "${{ env.CMAKE_BUILD_DIR }}" --config ${{ matrix.build_config }} --verbose
      - name: Run tests
        working-directory: ${{ env.CMAKE_BUILD_DIR }}
        run: ctest --output-on-failure --no-tests=error --label-regex VWTestList --build-config ${{ matrix.build_config }}
