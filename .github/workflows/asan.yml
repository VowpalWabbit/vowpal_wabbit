name: AddressSanitizer

on:
  push:
    branches:
      - master
      - 'releases/**'
      - add_test_with_asan
  pull_request:
    branches:
      - '*'

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  test_with_asan:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        preset: [vcpkg-asan-debug, vcpkg-asan-release]
    runs-on: ${{matrix.os}}
    env:
      ASAN_OPTIONS: "alloc_dealloc_mismatch=0"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup MSVC Developer Command Prompt
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: ilammy/msvc-dev-cmd@v1
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@main
        with:
          vcpkgDirectory: '${{ github.workspace }}/ext_libs/vcpkg'
          vcpkgJsonGlob: "${{ github.workspace }}/vcpkg.json"
      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          configurePreset: "${{ matrix.preset }}"
      - name: Build
        run: cmake --build build
      - name: Run c wrapper test
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |
          cd build/vowpalwabbit/c_wrapper
          ls
          dumpbin /dependents vw_c_wrapper_test.exe
          dumpbin /dependents vw_c_wrapper.dll
          ./vw_c_wrapper_test.exe
      - name: Run unit tests
        if: ${{ success() || failure() }}
        run: |
          cd build
          ctest --verbose --output-on-failure
      - name: Run python test script - Windows
        # separate case needed for windows because of test 67
        if: ${{ startsWith(matrix.os, 'windows') && (success() || failure()) }}
        run: |
          python3 test/run_tests.py -f --clean_dirty -E 0.001 --include_flatbuffers --skip_test 67
      - name: Run python test script - Unix
        if: ${{ !startsWith(matrix.os, 'windows') && (success() || failure()) }}
        run: |
          python3 test/run_tests.py -f --clean_dirty -E 0.001 --include_flatbuffers
