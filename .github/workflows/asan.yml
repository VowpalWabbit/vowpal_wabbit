name: AddressSanitizer

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

env:
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg_binary_cache

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  test_with_sanitizers:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        preset: [vcpkg-asan-debug, vcpkg-ubsan-debug]
        exclude:
          # UBSan not supported by MSVC on Windows
          - { os: windows-latest, preset: vcpkg-ubsan-debug }
          # UBSan runs out of disk space on Linux
          - { os: ubuntu-latest, preset: vcpkg-ubsan-debug }
    runs-on: ${{ matrix.os }}
    name: asan.${{ matrix.os }}.${{ matrix.preset }}
    env:
      UBSAN_OPTIONS: "print_stacktrace=1"

    steps:
      - run: git submodule update --init ext_libs/vcpkg
      - uses: lukka/get-cmake@latest
      - uses: ilammy/msvc-dev-cmd@v1
      - run: echo "VCPKG_COMMIT=$(git rev-parse :ext_libs/vcpkg)" >> $GITHUB_ENV
        shell: bash
      - run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
          key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json') }}-${{ env.VCPKG_COMMIT }}"
      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          configurePreset: "${{ matrix.preset }}"
      - name: Build
        run: cmake --build build
      - name: Run unit tests
        run: |
          cd build
          ctest --verbose --output-on-failure
      - name: Run python test script
        if: ${{ success() || failure() }}
        run: python3 test/run_tests.py -f --clean_dirty -E 0.001 --include_flatbuffers --jobs 1

  test_ubsan_minimal:
  # To avoid running out of disk space, build only VW executables and Boost unit tests on Linux
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        preset: [vcpkg-ubsan-debug]
    runs-on: ${{ matrix.os }}
    name: asan.${{ matrix.os }}.${{ matrix.preset }}
    env:
      UBSAN_OPTIONS: "print_stacktrace=1"

    steps:
      - uses: actions/checkout@v3
      - run: git submodule update --init ext_libs/vcpkg
      - uses: lukka/get-cmake@latest
      - run: echo "VCPKG_COMMIT=$(git rev-parse :ext_libs/vcpkg)" >> $GITHUB_ENV
        shell: bash
      - run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
          key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json') }}-${{ env.VCPKG_COMMIT }}"
      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          configurePreset: "${{ matrix.preset }}"
      - name: Build
        run: cmake --build build --target vw_cli_bin spanning_tree vw-unit-test.out
      - name: Run unit tests
        run: ./build/test/unit_test/vw-unit-test.out --run_test='!*w_iterations*'
      - name: Run python test script
        if: ${{ success() || failure() }}
        run: python3 test/run_tests.py -f --clean_dirty -E 0.001 --include_flatbuffers
