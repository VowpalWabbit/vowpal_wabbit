name: Vcpkg build

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

env:
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg_binary_cache
  VCPKG_ROOT_VW: ${{github.workspace}}/ext_libs/vcpkg

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.preset }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        preset: [vcpkg-debug, vcpkg-release]
    steps:
      - run: echo ${{ env.VCPKG_ROOT_VW }}
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: lukka/get-cmake@latest
      - uses: ilammy/msvc-dev-cmd@v1
      - run: echo "VCPKG_COMMIT=$(git rev-parse :ext_libs/vcpkg)" >> $GITHUB_ENV
        shell: bash
      - run: mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
      - uses: actions/cache@v3
        env:
          cache-name: vcpkg-cache
        with:
          path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
          key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json') }}-${{ env.VCPKG_COMMIT }}"
      - name: Define env var
        run: echo "VCPKG_ROOT=${{ env.VCPKG_ROOT_VW }}" >> $GITHUB_ENV
      - name: Print env var
        run: echo ${{ env.VCPKG_ROOT }}
      - uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: "${{ github.workspace }}/CMakeLists.txt"
          configurePreset: "${{ matrix.preset }}"
          buildPreset: "${{ matrix.preset }}"
          testPreset: "${{ matrix.preset }}"
