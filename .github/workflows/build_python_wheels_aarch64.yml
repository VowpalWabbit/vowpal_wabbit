name: Linux_AArch64 / Python

on:
  schedule:
    - cron:  '30 5 * * *'

jobs:
  Build-aarch64:
    strategy:
      matrix:
        config:
        - { version: "3.6", base_path: /opt/python/cp36-cp36m/, include_dir_name: python3.6m/, experimental: false }
        - { version: "3.7", base_path: /opt/python/cp37-cp37m/, include_dir_name: python3.7m/, experimental: false }
        - { version: "3.8", base_path: /opt/python/cp38-cp38/, include_dir_name: python3.8/, experimental: false }
        - { version: "3.9", base_path: /opt/python/cp39-cp39/, include_dir_name: python3.9/, experimental: false }
        - { version: "3.10", base_path: /opt/python/cp310-cp310/, include_dir_name: python3.10/, experimental: false }
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Pull image
      run: docker pull vowpalwabbit/manylinux2014_aarch64-build
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            vowpalwabbit/manylinux2014_aarch64-build \
            bash -exc '${{ matrix.config.base_path }}bin/pip wheel . -w wheel_output/ --global-option --cmake-options="-DSTATIC_LINK_VW_JAVA=On;-DPython_INCLUDE_DIR='${{ matrix.config.base_path }}include/${{ matrix.config.include_dir_name }}'" --verbose && \
            auditwheel repair wheel_output/*whl -w audit_output/'
    - name: Upload built wheel
      uses: actions/upload-artifact@v1
      with:
        name: aarch64_wheel_${{ matrix.config.version }}
        path: audit_output/

  test-aarch64:
    needs: Build-aarch64
    strategy:
      matrix:
        config:
        - { version: "3.6", experimental: false }
        - { version: "3.7", experimental: false }
        - { version: "3.8", experimental: false }
        - { version: "3.9", experimental: false }
        - { version: "3.10", experimental: false }
      fail-fast: false
    env:
      py: python${{ matrix.config.version }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Download Wheel
      uses: actions/download-artifact@v1
      with:
        name: aarch64_wheel_${{ matrix.config.version }}      
    - name: Build Wheel
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            arm64v8/ubuntu \
            bash -exc 'apt-get update && \
            apt install software-properties-common -y && \
            add-apt-repository ppa:deadsnakes/ppa -y && \
            apt install -y ${{ env.py }} && \
            apt install -y ${{ env.py }}-venv && \
            ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install --upgrade pip && \
            pip install -r requirements.txt && \
            pip install pytest && \
            export wheel_files=(aarch64_wheel_${{ matrix.config.version }}/*) && \
            export wheel_file="${wheel_files[0]}" && \
            echo Installing ${wheel_file}... && \
            pip install ${wheel_file} && \
            python --version && \
            python -m pytest ./python/tests/ && \
            deactivate'
