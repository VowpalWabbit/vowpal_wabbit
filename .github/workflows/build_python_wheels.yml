name: Linux / Python

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    container:
      image: vowpalwabbit/manylinux2010-build:latest
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.config.experimental }}
    strategy:
      matrix:
        config:
        - { version: 3.5, base_path: /opt/python/cp35-cp35m/, include_dir_name: python3.5m/, experimental: false }
        - { version: 3.6, base_path: /opt/python/cp36-cp36m/, include_dir_name: python3.6m/, experimental: false }
        - { version: 3.7, base_path: /opt/python/cp37-cp37m/, include_dir_name: python3.7m/, experimental: false }
        - { version: 3.8, base_path: /opt/python/cp38-cp38/, include_dir_name: python3.8/, experimental: false }
        - { version: 3.9, base_path: /opt/python/cp39-cp39/, include_dir_name: python3.9/, experimental: false }
    steps:
      # v1 must be used because newer versions require a node.js version that will not run on this old image.
      - uses: actions/checkout@v1
      - name: Build wheel
        shell: bash
        run: |
          ${{ matrix.config.base_path }}bin/pip wheel . -w wheel_output/ --global-option --cmake-options="-DSTATIC_LINK_VW_JAVA=On;-DPython_INCLUDE_DIR='${{ matrix.config.base_path }}include/${{ matrix.config.include_dir_name }}'" --verbose
          auditwheel repair wheel_output/*whl -w audit_output/
      - name: Upload built wheel
        uses: actions/upload-artifact@v1
        with:
          name: wheel_${{ matrix.config.version }}
          path: audit_output/
  test:
    needs: build
    container:
      image: python:${{ matrix.config.version }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.config.experimental }}
    strategy:
      matrix:
        config:
        - { version: 3.5, experimental: false }
        - { version: 3.6, experimental: false }
        - { version: 3.7, experimental: false }
        - { version: 3.8, experimental: false }
        - { version: 3.9, experimental: false }
    steps:
      - uses: actions/checkout@v1
      - name: Download Wheel
        uses: actions/download-artifact@v1
        with:
          name: wheel_${{ matrix.config.version }}
      - name: Install dependencies
        shell: bash
        run: |
          pip install -r requirements.txt
          pip install pytest
      - name: Install wheel
        shell: bash
        run: |
          export wheel_files=(wheel_${{ matrix.config.version }}/*)
          export wheel_file="${wheel_files[0]}"
          echo Installing ${wheel_file}...
          pip install ${wheel_file}
      - name: Run unit tests
        shell: bash
        run: |
          python -m pytest ./python/tests/
      - name: Run doctest
        shell: bash
        run: |
          python ./python/tests/run_doctest.py
