[
    {
        "data_func": {
            "name": "constant_function",
            "params": {
                "no_sample": 2000,
                "constant": 5,
                "lower_bound": 1,
                "upper_bound": 100
            }
        },
        "assert_functions": [
            {
                "name": "assert_prediction",
                "params": {
                    "expected_value": [
                        5
                    ],
                    "threshold": 0
                }
            },
            {
                "name": "assert_weight",
                "params": {
                    "expected_weights": [
                        5,
                        0
                    ],
                    "atol": 100,
                    "rtol": 10
                }
            }
        ],
        "grids": {
            "g0": {
                "#base": [
                    "-P 50000 --preserve_performance_counters --save_resume"
                ]
            },
            "g1": {
                "--learning_rate": [
                    null,
                    0.1,
                    0.01,
                    0.001
                ],
                "--decay_learning_rate": [
                    null,
                    1.1,
                    1,
                    0.9
                ],
                "--power_t": [
                    null,
                    0.5,
                    0.6,
                    0.4
                ]
            },
            "g2": {
                "#reg": [
                    "--freegrad",
                    "--conjugate_gradient",
                    "--bfgs --passes 1 --cache"
                ]
            },
            "g3": {
                "#reg": [
                    "--ftrl",
                    "--coin",
                    "--pistol"
                ],
                "--ftrl_alpha": [
                    null,
                    0.1
                ],
                "--ftrl_beta": [
                    null,
                    0.1
                ]
            },
            "g4": {
                "--loss_function": [
                    null,
                    "poisson",
                    "quantile"
                ]
            },
            "g5": {
                "--loss_function": [
                    "expectile"
                ],
                "--expectile_q": [
                    0.25,
                    0.5
                ]
            }
        },
        "grids_expression": "g0 * (g1 + g2 + g3) * (g5 + g4)",
        "output": [
            "--readable_model",
            "-p"
        ]
    }
]